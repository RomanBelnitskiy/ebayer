/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * PaymentMethod
 */

@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class PaymentMethod {
  @SerializedName("paymentMethodType")
  private String paymentMethodType = null;

  @SerializedName("paymentMethodBrands")
  private List<PaymentMethodBrand> paymentMethodBrands = null;

  @SerializedName("paymentInstructions")
  private List<String> paymentInstructions = null;

  @SerializedName("sellerInstructions")
  private List<String> sellerInstructions = null;

  public PaymentMethod paymentMethodType(String paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
    return this;
  }

   /**
   * The payment method type, such as credit card or cash. For implementation help, refer to &lt;a href&#x3D;&#x27;https://developer.ebay.com/api-docs/buy/browse/types/gct:PaymentMethodTypeEnum&#x27;&gt;eBay API documentation&lt;/a&gt;
   * @return paymentMethodType
  **/
  @Schema(description = "The payment method type, such as credit card or cash. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:PaymentMethodTypeEnum'>eBay API documentation</a>")
  public String getPaymentMethodType() {
    return paymentMethodType;
  }

  public void setPaymentMethodType(String paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }

  public PaymentMethod paymentMethodBrands(List<PaymentMethodBrand> paymentMethodBrands) {
    this.paymentMethodBrands = paymentMethodBrands;
    return this;
  }

  public PaymentMethod addPaymentMethodBrandsItem(PaymentMethodBrand paymentMethodBrandsItem) {
    if (this.paymentMethodBrands == null) {
      this.paymentMethodBrands = new ArrayList<PaymentMethodBrand>();
    }
    this.paymentMethodBrands.add(paymentMethodBrandsItem);
    return this;
  }

   /**
   * The payment method brands, including the payment method brand type and logo image.
   * @return paymentMethodBrands
  **/
  @Schema(description = "The payment method brands, including the payment method brand type and logo image.")
  public List<PaymentMethodBrand> getPaymentMethodBrands() {
    return paymentMethodBrands;
  }

  public void setPaymentMethodBrands(List<PaymentMethodBrand> paymentMethodBrands) {
    this.paymentMethodBrands = paymentMethodBrands;
  }

  public PaymentMethod paymentInstructions(List<String> paymentInstructions) {
    this.paymentInstructions = paymentInstructions;
    return this;
  }

  public PaymentMethod addPaymentInstructionsItem(String paymentInstructionsItem) {
    if (this.paymentInstructions == null) {
      this.paymentInstructions = new ArrayList<String>();
    }
    this.paymentInstructions.add(paymentInstructionsItem);
    return this;
  }

   /**
   * The payment instructions for the buyer, such as &lt;i&gt;cash in person&lt;/i&gt; or &lt;i&gt;contact seller&lt;/i&gt;.
   * @return paymentInstructions
  **/
  @Schema(description = "The payment instructions for the buyer, such as <i>cash in person</i> or <i>contact seller</i>.")
  public List<String> getPaymentInstructions() {
    return paymentInstructions;
  }

  public void setPaymentInstructions(List<String> paymentInstructions) {
    this.paymentInstructions = paymentInstructions;
  }

  public PaymentMethod sellerInstructions(List<String> sellerInstructions) {
    this.sellerInstructions = sellerInstructions;
    return this;
  }

  public PaymentMethod addSellerInstructionsItem(String sellerInstructionsItem) {
    if (this.sellerInstructions == null) {
      this.sellerInstructions = new ArrayList<String>();
    }
    this.sellerInstructions.add(sellerInstructionsItem);
    return this;
  }

   /**
   * The seller instructions to the buyer, such as &lt;i&gt;accepts credit cards&lt;/i&gt; or &lt;i&gt;see description&lt;/i&gt;.
   * @return sellerInstructions
  **/
  @Schema(description = "The seller instructions to the buyer, such as <i>accepts credit cards</i> or <i>see description</i>.")
  public List<String> getSellerInstructions() {
    return sellerInstructions;
  }

  public void setSellerInstructions(List<String> sellerInstructions) {
    this.sellerInstructions = sellerInstructions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethod paymentMethod = (PaymentMethod) o;
    return Objects.equals(this.paymentMethodType, paymentMethod.paymentMethodType) &&
        Objects.equals(this.paymentMethodBrands, paymentMethod.paymentMethodBrands) &&
        Objects.equals(this.paymentInstructions, paymentMethod.paymentInstructions) &&
        Objects.equals(this.sellerInstructions, paymentMethod.sellerInstructions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethodType, paymentMethodBrands, paymentInstructions, sellerInstructions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethod {\n");
    
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("    paymentMethodBrands: ").append(toIndentedString(paymentMethodBrands)).append("\n");
    sb.append("    paymentInstructions: ").append(toIndentedString(paymentInstructions)).append("\n");
    sb.append("    sellerInstructions: ").append(toIndentedString(sellerInstructions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
