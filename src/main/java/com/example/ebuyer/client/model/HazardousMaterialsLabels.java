/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * A type that defines the hazardous materials labels for an item.
 */
@Schema(description = "A type that defines the hazardous materials labels for an item.")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class HazardousMaterialsLabels {
  @SerializedName("additionalInformation")
  private String additionalInformation = null;

  @SerializedName("pictograms")
  private List<HazardPictogram> pictograms = null;

  @SerializedName("signalWord")
  private String signalWord = null;

  @SerializedName("signalWordId")
  private String signalWordId = null;

  @SerializedName("statements")
  private List<HazardStatement> statements = null;

  public HazardousMaterialsLabels additionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * Additional information about the hazardous materials labels.
   * @return additionalInformation
  **/
  @Schema(description = "Additional information about the hazardous materials labels.")
  public String getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }

  public HazardousMaterialsLabels pictograms(List<HazardPictogram> pictograms) {
    this.pictograms = pictograms;
    return this;
  }

  public HazardousMaterialsLabels addPictogramsItem(HazardPictogram pictogramsItem) {
    if (this.pictograms == null) {
      this.pictograms = new ArrayList<HazardPictogram>();
    }
    this.pictograms.add(pictogramsItem);
    return this;
  }

   /**
   * An array of hazard pictograms that apply to the item.
   * @return pictograms
  **/
  @Schema(description = "An array of hazard pictograms that apply to the item.")
  public List<HazardPictogram> getPictograms() {
    return pictograms;
  }

  public void setPictograms(List<HazardPictogram> pictograms) {
    this.pictograms = pictograms;
  }

  public HazardousMaterialsLabels signalWord(String signalWord) {
    this.signalWord = signalWord;
    return this;
  }

   /**
   * The signal word for the hazardous materials label (such as Danger or Warning).
   * @return signalWord
  **/
  @Schema(description = "The signal word for the hazardous materials label (such as Danger or Warning).")
  public String getSignalWord() {
    return signalWord;
  }

  public void setSignalWord(String signalWord) {
    this.signalWord = signalWord;
  }

  public HazardousMaterialsLabels signalWordId(String signalWordId) {
    this.signalWordId = signalWordId;
    return this;
  }

   /**
   * The ID of the signal word for the hazardous materials label.
   * @return signalWordId
  **/
  @Schema(description = "The ID of the signal word for the hazardous materials label.")
  public String getSignalWordId() {
    return signalWordId;
  }

  public void setSignalWordId(String signalWordId) {
    this.signalWordId = signalWordId;
  }

  public HazardousMaterialsLabels statements(List<HazardStatement> statements) {
    this.statements = statements;
    return this;
  }

  public HazardousMaterialsLabels addStatementsItem(HazardStatement statementsItem) {
    if (this.statements == null) {
      this.statements = new ArrayList<HazardStatement>();
    }
    this.statements.add(statementsItem);
    return this;
  }

   /**
   * An array of hazard statements for the item.
   * @return statements
  **/
  @Schema(description = "An array of hazard statements for the item.")
  public List<HazardStatement> getStatements() {
    return statements;
  }

  public void setStatements(List<HazardStatement> statements) {
    this.statements = statements;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HazardousMaterialsLabels hazardousMaterialsLabels = (HazardousMaterialsLabels) o;
    return Objects.equals(this.additionalInformation, hazardousMaterialsLabels.additionalInformation) &&
        Objects.equals(this.pictograms, hazardousMaterialsLabels.pictograms) &&
        Objects.equals(this.signalWord, hazardousMaterialsLabels.signalWord) &&
        Objects.equals(this.signalWordId, hazardousMaterialsLabels.signalWordId) &&
        Objects.equals(this.statements, hazardousMaterialsLabels.statements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalInformation, pictograms, signalWord, signalWordId, statements);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HazardousMaterialsLabels {\n");
    
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    pictograms: ").append(toIndentedString(pictograms)).append("\n");
    sb.append("    signalWord: ").append(toIndentedString(signalWord)).append("\n");
    sb.append("    signalWordId: ").append(toIndentedString(signalWordId)).append("\n");
    sb.append("    statements: ").append(toIndentedString(statements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
