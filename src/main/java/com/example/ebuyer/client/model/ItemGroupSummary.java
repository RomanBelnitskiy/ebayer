/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * The type that defines the fields for the details of each item in an item group. An item group is  an item that has various aspect differences, such as color, size, storage capacity, etc. When an item group is created, one of the item variations, such as the red shirt size L, is chosen as the \&quot;parent\&quot;. All the other items in the group are the children, such as the blue shirt size L, red shirt size M, etc. &lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note: &lt;/b&gt; This container is returned only if the &lt;b&gt; item_id&lt;/b&gt; in the request is an item group (parent ID of an item with variations).&lt;/span&gt;
 */
@Schema(description = "The type that defines the fields for the details of each item in an item group. An item group is  an item that has various aspect differences, such as color, size, storage capacity, etc. When an item group is created, one of the item variations, such as the red shirt size L, is chosen as the \"parent\". All the other items in the group are the children, such as the blue shirt size L, red shirt size M, etc. <br><br><span class=\"tablenote\"><b> Note: </b> This container is returned only if the <b> item_id</b> in the request is an item group (parent ID of an item with variations).</span>")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class ItemGroupSummary {
  @SerializedName("itemGroupAdditionalImages")
  private List<Image> itemGroupAdditionalImages = null;

  @SerializedName("itemGroupHref")
  private String itemGroupHref = null;

  @SerializedName("itemGroupId")
  private String itemGroupId = null;

  @SerializedName("itemGroupImage")
  private Image itemGroupImage = null;

  @SerializedName("itemGroupTitle")
  private String itemGroupTitle = null;

  @SerializedName("itemGroupType")
  private String itemGroupType = null;

  public ItemGroupSummary itemGroupAdditionalImages(List<Image> itemGroupAdditionalImages) {
    this.itemGroupAdditionalImages = itemGroupAdditionalImages;
    return this;
  }

  public ItemGroupSummary addItemGroupAdditionalImagesItem(Image itemGroupAdditionalImagesItem) {
    if (this.itemGroupAdditionalImages == null) {
      this.itemGroupAdditionalImages = new ArrayList<Image>();
    }
    this.itemGroupAdditionalImages.add(itemGroupAdditionalImagesItem);
    return this;
  }

   /**
   * An array of containers with the URLs for images that are in addition to the primary image of the item group.  The primary image is returned in the &lt;b&gt; itemGroupImage&lt;/b&gt; field.
   * @return itemGroupAdditionalImages
  **/
  @Schema(description = "An array of containers with the URLs for images that are in addition to the primary image of the item group.  The primary image is returned in the <b> itemGroupImage</b> field.")
  public List<Image> getItemGroupAdditionalImages() {
    return itemGroupAdditionalImages;
  }

  public void setItemGroupAdditionalImages(List<Image> itemGroupAdditionalImages) {
    this.itemGroupAdditionalImages = itemGroupAdditionalImages;
  }

  public ItemGroupSummary itemGroupHref(String itemGroupHref) {
    this.itemGroupHref = itemGroupHref;
    return this;
  }

   /**
   * The HATEOAS reference of the parent page of the item group. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc. 
   * @return itemGroupHref
  **/
  @Schema(description = "The HATEOAS reference of the parent page of the item group. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc. ")
  public String getItemGroupHref() {
    return itemGroupHref;
  }

  public void setItemGroupHref(String itemGroupHref) {
    this.itemGroupHref = itemGroupHref;
  }

  public ItemGroupSummary itemGroupId(String itemGroupId) {
    this.itemGroupId = itemGroupId;
    return this;
  }

   /**
   * The unique identifier for the item group. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc. 
   * @return itemGroupId
  **/
  @Schema(description = "The unique identifier for the item group. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc. ")
  public String getItemGroupId() {
    return itemGroupId;
  }

  public void setItemGroupId(String itemGroupId) {
    this.itemGroupId = itemGroupId;
  }

  public ItemGroupSummary itemGroupImage(Image itemGroupImage) {
    this.itemGroupImage = itemGroupImage;
    return this;
  }

   /**
   * Get itemGroupImage
   * @return itemGroupImage
  **/
  @Schema(description = "")
  public Image getItemGroupImage() {
    return itemGroupImage;
  }

  public void setItemGroupImage(Image itemGroupImage) {
    this.itemGroupImage = itemGroupImage;
  }

  public ItemGroupSummary itemGroupTitle(String itemGroupTitle) {
    this.itemGroupTitle = itemGroupTitle;
    return this;
  }

   /**
   * The title of the item that appears on the item group page. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc. 
   * @return itemGroupTitle
  **/
  @Schema(description = "The title of the item that appears on the item group page. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc. ")
  public String getItemGroupTitle() {
    return itemGroupTitle;
  }

  public void setItemGroupTitle(String itemGroupTitle) {
    this.itemGroupTitle = itemGroupTitle;
  }

  public ItemGroupSummary itemGroupType(String itemGroupType) {
    this.itemGroupType = itemGroupType;
    return this;
  }

   /**
   * An enumeration value that indicates the type of the item group. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc. For implementation help, refer to &lt;a href&#x3D;&#x27;https://developer.ebay.com/api-docs/buy/browse/types/gct:ItemGroupTypeEnum&#x27;&gt;eBay API documentation&lt;/a&gt;
   * @return itemGroupType
  **/
  @Schema(description = "An enumeration value that indicates the type of the item group. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:ItemGroupTypeEnum'>eBay API documentation</a>")
  public String getItemGroupType() {
    return itemGroupType;
  }

  public void setItemGroupType(String itemGroupType) {
    this.itemGroupType = itemGroupType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemGroupSummary itemGroupSummary = (ItemGroupSummary) o;
    return Objects.equals(this.itemGroupAdditionalImages, itemGroupSummary.itemGroupAdditionalImages) &&
        Objects.equals(this.itemGroupHref, itemGroupSummary.itemGroupHref) &&
        Objects.equals(this.itemGroupId, itemGroupSummary.itemGroupId) &&
        Objects.equals(this.itemGroupImage, itemGroupSummary.itemGroupImage) &&
        Objects.equals(this.itemGroupTitle, itemGroupSummary.itemGroupTitle) &&
        Objects.equals(this.itemGroupType, itemGroupSummary.itemGroupType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemGroupAdditionalImages, itemGroupHref, itemGroupId, itemGroupImage, itemGroupTitle, itemGroupType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemGroupSummary {\n");
    
    sb.append("    itemGroupAdditionalImages: ").append(toIndentedString(itemGroupAdditionalImages)).append("\n");
    sb.append("    itemGroupHref: ").append(toIndentedString(itemGroupHref)).append("\n");
    sb.append("    itemGroupId: ").append(toIndentedString(itemGroupId)).append("\n");
    sb.append("    itemGroupImage: ").append(toIndentedString(itemGroupImage)).append("\n");
    sb.append("    itemGroupTitle: ").append(toIndentedString(itemGroupTitle)).append("\n");
    sb.append("    itemGroupType: ").append(toIndentedString(itemGroupType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
