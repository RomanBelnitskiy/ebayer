/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * The type that defines the array of product identifiers associated with the item. This container is returned if the seller has associated the eBay Product Identifier (ePID) with the item and in the request &lt;b&gt; fieldgroups&lt;/b&gt; is set to &lt;code&gt;PRODUCT&lt;/code&gt;.
 */
@Schema(description = "The type that defines the array of product identifiers associated with the item. This container is returned if the seller has associated the eBay Product Identifier (ePID) with the item and in the request <b> fieldgroups</b> is set to <code>PRODUCT</code>.")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class AdditionalProductIdentity {
  @SerializedName("productIdentity")
  private List<ProductIdentity> productIdentity = null;

  public AdditionalProductIdentity productIdentity(List<ProductIdentity> productIdentity) {
    this.productIdentity = productIdentity;
    return this;
  }

  public AdditionalProductIdentity addProductIdentityItem(ProductIdentity productIdentityItem) {
    if (this.productIdentity == null) {
      this.productIdentity = new ArrayList<ProductIdentity>();
    }
    this.productIdentity.add(productIdentityItem);
    return this;
  }

   /**
   * An array of the product identifier/value pairs for the product associated with the item. This is returned if the seller has associated the eBay Product Identifier (ePID) with the item and the request has &lt;b&gt; fieldgroups&lt;/b&gt; set to &lt;code&gt;PRODUCT&lt;/code&gt;. &lt;br&gt;&lt;br&gt;The following table shows what is returned, based on the item information provided by the seller, when the &lt;b&gt; fieldgroups&lt;/b&gt; set to &lt;code&gt;PRODUCT&lt;/code&gt;.        &lt;br&gt;&lt;br&gt;&lt;div style&#x3D;\&quot;overflow-x:auto;\&quot;&gt; &lt;table border&#x3D;1&gt; &lt;tr&gt; &lt;th&gt; ePID Provided &lt;/th&gt;  &lt;th&gt; Product&amp;nbsp;ID(s) Provided&lt;/th&gt; &lt;th&gt; Response&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt; No &lt;/td&gt;  &lt;td&gt; No &lt;/td&gt; &lt;td&gt; The &lt;b&gt; AdditionalProductIdentity&lt;/b&gt; container is &lt;i&gt; not&lt;/i&gt; returned.&lt;/td&gt;&lt;/tr&gt;   &lt;tr&gt; &lt;td&gt; No &lt;/td&gt;  &lt;td&gt; Yes &lt;/td&gt;  &lt;td&gt; The &lt;b&gt; AdditionalProductIdentity&lt;/b&gt; container is &lt;i&gt; not&lt;/i&gt; returned but the product identifiers specified by the seller are returned in the &lt;b&gt; localizedAspects&lt;/b&gt; container. &lt;/td&gt;  &lt;/tr&gt;   &lt;tr&gt; &lt;td&gt; Yes &lt;/td&gt;  &lt;td&gt; No &lt;/td&gt; &lt;td&gt;  The &lt;b&gt; AdditionalProductIdentity&lt;/b&gt; container is returned listing the product identifiers of the product.&lt;/td&gt;&lt;/tr&gt;   &lt;tr&gt; &lt;td&gt; Yes &lt;/td&gt;  &lt;td&gt; Yes &lt;/td&gt; &lt;td&gt; The &lt;b&gt; AdditionalProductIdentity&lt;/b&gt; container is returned listing all the product identifiers of the product and the product identifiers specified by the seller are returned in the &lt;b&gt; localizedAspects&lt;/b&gt; container.&lt;/td&gt; &lt;/tr&gt;   &lt;/table&gt; &lt;/div&gt;
   * @return productIdentity
  **/
  @Schema(description = "An array of the product identifier/value pairs for the product associated with the item. This is returned if the seller has associated the eBay Product Identifier (ePID) with the item and the request has <b> fieldgroups</b> set to <code>PRODUCT</code>. <br><br>The following table shows what is returned, based on the item information provided by the seller, when the <b> fieldgroups</b> set to <code>PRODUCT</code>.        <br><br><div style=\"overflow-x:auto;\"> <table border=1> <tr> <th> ePID Provided </th>  <th> Product&nbsp;ID(s) Provided</th> <th> Response</th> </tr> <tr> <td> No </td>  <td> No </td> <td> The <b> AdditionalProductIdentity</b> container is <i> not</i> returned.</td></tr>   <tr> <td> No </td>  <td> Yes </td>  <td> The <b> AdditionalProductIdentity</b> container is <i> not</i> returned but the product identifiers specified by the seller are returned in the <b> localizedAspects</b> container. </td>  </tr>   <tr> <td> Yes </td>  <td> No </td> <td>  The <b> AdditionalProductIdentity</b> container is returned listing the product identifiers of the product.</td></tr>   <tr> <td> Yes </td>  <td> Yes </td> <td> The <b> AdditionalProductIdentity</b> container is returned listing all the product identifiers of the product and the product identifiers specified by the seller are returned in the <b> localizedAspects</b> container.</td> </tr>   </table> </div>")
  public List<ProductIdentity> getProductIdentity() {
    return productIdentity;
  }

  public void setProductIdentity(List<ProductIdentity> productIdentity) {
    this.productIdentity = productIdentity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdditionalProductIdentity additionalProductIdentity = (AdditionalProductIdentity) o;
    return Objects.equals(this.productIdentity, additionalProductIdentity.productIdentity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productIdentity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdditionalProductIdentity {\n");
    
    sb.append("    productIdentity: ").append(toIndentedString(productIdentity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
