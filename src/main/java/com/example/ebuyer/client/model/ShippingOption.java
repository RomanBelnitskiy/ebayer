/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.Objects;

/**
 * The type that defines the fields for the details of a shipping provider.
 */
@Schema(description = "The type that defines the fields for the details of a shipping provider.")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class ShippingOption {
  @SerializedName("additionalShippingCostPerUnit")
  private ConvertedAmount additionalShippingCostPerUnit = null;

  @SerializedName("cutOffDateUsedForEstimate")
  private String cutOffDateUsedForEstimate = null;

  @SerializedName("fulfilledThrough")
  private String fulfilledThrough = null;

  @SerializedName("guaranteedDelivery")
  private Boolean guaranteedDelivery = null;

  @SerializedName("importCharges")
  private ConvertedAmount importCharges = null;

  @SerializedName("maxEstimatedDeliveryDate")
  private String maxEstimatedDeliveryDate = null;

  @SerializedName("minEstimatedDeliveryDate")
  private String minEstimatedDeliveryDate = null;

  @SerializedName("quantityUsedForEstimate")
  private Integer quantityUsedForEstimate = null;

  @SerializedName("shippingCarrierCode")
  private String shippingCarrierCode = null;

  @SerializedName("shippingCost")
  private ConvertedAmount shippingCost = null;

  @SerializedName("shippingCostType")
  private String shippingCostType = null;

  @SerializedName("shippingServiceCode")
  private String shippingServiceCode = null;

  @SerializedName("shipToLocationUsedForEstimate")
  private ShipToLocation shipToLocationUsedForEstimate = null;

  @SerializedName("trademarkSymbol")
  private String trademarkSymbol = null;

  @SerializedName("type")
  private String type = null;

  public ShippingOption additionalShippingCostPerUnit(ConvertedAmount additionalShippingCostPerUnit) {
    this.additionalShippingCostPerUnit = additionalShippingCostPerUnit;
    return this;
  }

   /**
   * Get additionalShippingCostPerUnit
   * @return additionalShippingCostPerUnit
  **/
  @Schema(description = "")
  public ConvertedAmount getAdditionalShippingCostPerUnit() {
    return additionalShippingCostPerUnit;
  }

  public void setAdditionalShippingCostPerUnit(ConvertedAmount additionalShippingCostPerUnit) {
    this.additionalShippingCostPerUnit = additionalShippingCostPerUnit;
  }

  public ShippingOption cutOffDateUsedForEstimate(String cutOffDateUsedForEstimate) {
    this.cutOffDateUsedForEstimate = cutOffDateUsedForEstimate;
    return this;
  }

   /**
   * The deadline date that the item must be purchased by in order to be received by the buyer within the delivery window (&lt;b&gt; maxEstimatedDeliveryDate&lt;/b&gt; and  &lt;b&gt; minEstimatedDeliveryDate&lt;/b&gt; fields). This field is returned only for items that are eligible for &#x27;Same Day Handling&#x27;. For these items, the value of this field is what is displayed in the &lt;b&gt; Delivery&lt;/b&gt; line on the View Item page.  &lt;br&gt;&lt;br&gt;This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer.
   * @return cutOffDateUsedForEstimate
  **/
  @Schema(description = "The deadline date that the item must be purchased by in order to be received by the buyer within the delivery window (<b> maxEstimatedDeliveryDate</b> and  <b> minEstimatedDeliveryDate</b> fields). This field is returned only for items that are eligible for 'Same Day Handling'. For these items, the value of this field is what is displayed in the <b> Delivery</b> line on the View Item page.  <br><br>This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer.")
  public String getCutOffDateUsedForEstimate() {
    return cutOffDateUsedForEstimate;
  }

  public void setCutOffDateUsedForEstimate(String cutOffDateUsedForEstimate) {
    this.cutOffDateUsedForEstimate = cutOffDateUsedForEstimate;
  }

  public ShippingOption fulfilledThrough(String fulfilledThrough) {
    this.fulfilledThrough = fulfilledThrough;
    return this;
  }

   /**
   * If the item is being shipped by the eBay &lt;a href&#x3D;\&quot;https://pages.ebay.com/seller-center/shipping/global-shipping-program.html \&quot;&gt;Global Shipping program&lt;/a&gt;, this field returns &lt;code&gt;GLOBAL_SHIPPING&lt;/code&gt;.&lt;br&gt;&lt;br&gt;If the item is being shipped using the eBay International Shipping program, this field returns &lt;code&gt;INTERNATIONAL_SHIPPING&lt;/code&gt;. &lt;br&gt;&lt;br&gt;Otherwise, this field is null. For implementation help, refer to &lt;a href&#x3D;&#x27;https://developer.ebay.com/api-docs/buy/browse/types/gct:FulfilledThroughEnum&#x27;&gt;eBay API documentation&lt;/a&gt;
   * @return fulfilledThrough
  **/
  @Schema(description = "If the item is being shipped by the eBay <a href=\"https://pages.ebay.com/seller-center/shipping/global-shipping-program.html \">Global Shipping program</a>, this field returns <code>GLOBAL_SHIPPING</code>.<br><br>If the item is being shipped using the eBay International Shipping program, this field returns <code>INTERNATIONAL_SHIPPING</code>. <br><br>Otherwise, this field is null. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:FulfilledThroughEnum'>eBay API documentation</a>")
  public String getFulfilledThrough() {
    return fulfilledThrough;
  }

  public void setFulfilledThrough(String fulfilledThrough) {
    this.fulfilledThrough = fulfilledThrough;
  }

  public ShippingOption guaranteedDelivery(Boolean guaranteedDelivery) {
    this.guaranteedDelivery = guaranteedDelivery;
    return this;
  }

   /**
   * Although this field is still returned, it can be ignored since eBay Guaranteed Delivery is no longer a supported feature on any marketplace. This field may get removed from the schema in the future.
   * @return guaranteedDelivery
  **/
  @Schema(description = "Although this field is still returned, it can be ignored since eBay Guaranteed Delivery is no longer a supported feature on any marketplace. This field may get removed from the schema in the future.")
  public Boolean isGuaranteedDelivery() {
    return guaranteedDelivery;
  }

  public void setGuaranteedDelivery(Boolean guaranteedDelivery) {
    this.guaranteedDelivery = guaranteedDelivery;
  }

  public ShippingOption importCharges(ConvertedAmount importCharges) {
    this.importCharges = importCharges;
    return this;
  }

   /**
   * Get importCharges
   * @return importCharges
  **/
  @Schema(description = "")
  public ConvertedAmount getImportCharges() {
    return importCharges;
  }

  public void setImportCharges(ConvertedAmount importCharges) {
    this.importCharges = importCharges;
  }

  public ShippingOption maxEstimatedDeliveryDate(String maxEstimatedDeliveryDate) {
    this.maxEstimatedDeliveryDate = maxEstimatedDeliveryDate;
    return this;
  }

   /**
   * The end date of the delivery window (latest projected delivery date).  This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. &lt;br&gt; &lt;br&gt; &lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt; Note: &lt;/b&gt; For the best accuracy, always include the location of where the item is be shipped in the &lt;code&gt; contextualLocation&lt;/code&gt; values of the &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot;&gt; &lt;code&gt;X-EBAY-C-ENDUSERCTX&lt;/code&gt;&lt;/a&gt; request header.&lt;/span&gt; 
   * @return maxEstimatedDeliveryDate
  **/
  @Schema(description = "The end date of the delivery window (latest projected delivery date).  This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. <br> <br> <span class=\"tablenote\"> <b> Note: </b> For the best accuracy, always include the location of where the item is be shipped in the <code> contextualLocation</code> values of the <a href=\"/api-docs/buy/static/api-browse.html#Headers\"> <code>X-EBAY-C-ENDUSERCTX</code></a> request header.</span> ")
  public String getMaxEstimatedDeliveryDate() {
    return maxEstimatedDeliveryDate;
  }

  public void setMaxEstimatedDeliveryDate(String maxEstimatedDeliveryDate) {
    this.maxEstimatedDeliveryDate = maxEstimatedDeliveryDate;
  }

  public ShippingOption minEstimatedDeliveryDate(String minEstimatedDeliveryDate) {
    this.minEstimatedDeliveryDate = minEstimatedDeliveryDate;
    return this;
  }

   /**
   * The start date of the delivery window (earliest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. &lt;br&gt; &lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt; &lt;b&gt; Note: &lt;/b&gt; For the best accuracy, always include the location of where the item is be shipped in the &lt;code&gt; contextualLocation&lt;/code&gt; values of the &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot;&gt; &lt;code&gt;X-EBAY-C-ENDUSERCTX&lt;/code&gt;&lt;/a&gt; request header.&lt;/span&gt;
   * @return minEstimatedDeliveryDate
  **/
  @Schema(description = "The start date of the delivery window (earliest projected delivery date). This value is returned in UTC format (yyyy-MM-ddThh:mm:ss.sssZ), which you can convert into the local time of the buyer. <br> <br><span class=\"tablenote\"> <b> Note: </b> For the best accuracy, always include the location of where the item is be shipped in the <code> contextualLocation</code> values of the <a href=\"/api-docs/buy/static/api-browse.html#Headers\"> <code>X-EBAY-C-ENDUSERCTX</code></a> request header.</span>")
  public String getMinEstimatedDeliveryDate() {
    return minEstimatedDeliveryDate;
  }

  public void setMinEstimatedDeliveryDate(String minEstimatedDeliveryDate) {
    this.minEstimatedDeliveryDate = minEstimatedDeliveryDate;
  }

  public ShippingOption quantityUsedForEstimate(Integer quantityUsedForEstimate) {
    this.quantityUsedForEstimate = quantityUsedForEstimate;
    return this;
  }

   /**
   * The number of items used when calculating the estimation information.
   * @return quantityUsedForEstimate
  **/
  @Schema(description = "The number of items used when calculating the estimation information.")
  public Integer getQuantityUsedForEstimate() {
    return quantityUsedForEstimate;
  }

  public void setQuantityUsedForEstimate(Integer quantityUsedForEstimate) {
    this.quantityUsedForEstimate = quantityUsedForEstimate;
  }

  public ShippingOption shippingCarrierCode(String shippingCarrierCode) {
    this.shippingCarrierCode = shippingCarrierCode;
    return this;
  }

   /**
   * The name of the shipping provider, such as FedEx, or USPS.
   * @return shippingCarrierCode
  **/
  @Schema(description = "The name of the shipping provider, such as FedEx, or USPS.")
  public String getShippingCarrierCode() {
    return shippingCarrierCode;
  }

  public void setShippingCarrierCode(String shippingCarrierCode) {
    this.shippingCarrierCode = shippingCarrierCode;
  }

  public ShippingOption shippingCost(ConvertedAmount shippingCost) {
    this.shippingCost = shippingCost;
    return this;
  }

   /**
   * Get shippingCost
   * @return shippingCost
  **/
  @Schema(description = "")
  public ConvertedAmount getShippingCost() {
    return shippingCost;
  }

  public void setShippingCost(ConvertedAmount shippingCost) {
    this.shippingCost = shippingCost;
  }

  public ShippingOption shippingCostType(String shippingCostType) {
    this.shippingCostType = shippingCostType;
    return this;
  }

   /**
   * Indicates the class of the shipping cost. &lt;br&gt;&lt;br&gt;&lt;b&gt; Valid Values: &lt;/b&gt; FIXED or CALCULATED &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. 
   * @return shippingCostType
  **/
  @Schema(description = "Indicates the class of the shipping cost. <br><br><b> Valid Values: </b> FIXED or CALCULATED <br><br>Code so that your app gracefully handles any future changes to this list. ")
  public String getShippingCostType() {
    return shippingCostType;
  }

  public void setShippingCostType(String shippingCostType) {
    this.shippingCostType = shippingCostType;
  }

  public ShippingOption shippingServiceCode(String shippingServiceCode) {
    this.shippingServiceCode = shippingServiceCode;
    return this;
  }

   /**
   * The type of shipping service. For example, USPS First Class.
   * @return shippingServiceCode
  **/
  @Schema(description = "The type of shipping service. For example, USPS First Class.")
  public String getShippingServiceCode() {
    return shippingServiceCode;
  }

  public void setShippingServiceCode(String shippingServiceCode) {
    this.shippingServiceCode = shippingServiceCode;
  }

  public ShippingOption shipToLocationUsedForEstimate(ShipToLocation shipToLocationUsedForEstimate) {
    this.shipToLocationUsedForEstimate = shipToLocationUsedForEstimate;
    return this;
  }

   /**
   * Get shipToLocationUsedForEstimate
   * @return shipToLocationUsedForEstimate
  **/
  @Schema(description = "")
  public ShipToLocation getShipToLocationUsedForEstimate() {
    return shipToLocationUsedForEstimate;
  }

  public void setShipToLocationUsedForEstimate(ShipToLocation shipToLocationUsedForEstimate) {
    this.shipToLocationUsedForEstimate = shipToLocationUsedForEstimate;
  }

  public ShippingOption trademarkSymbol(String trademarkSymbol) {
    this.trademarkSymbol = trademarkSymbol;
    return this;
  }

   /**
   * Any trademark symbol, such as &amp;#8482; or &amp;reg;, that needs to be shown in superscript next to the shipping service name.
   * @return trademarkSymbol
  **/
  @Schema(description = "Any trademark symbol, such as &#8482; or &reg;, that needs to be shown in superscript next to the shipping service name.")
  public String getTrademarkSymbol() {
    return trademarkSymbol;
  }

  public void setTrademarkSymbol(String trademarkSymbol) {
    this.trademarkSymbol = trademarkSymbol;
  }

  public ShippingOption type(String type) {
    this.type = type;
    return this;
  }

   /**
   * The type of a shipping option, such as EXPEDITED, ONE_DAY, STANDARD, ECONOMY, PICKUP, etc.
   * @return type
  **/
  @Schema(description = "The type of a shipping option, such as EXPEDITED, ONE_DAY, STANDARD, ECONOMY, PICKUP, etc.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingOption shippingOption = (ShippingOption) o;
    return Objects.equals(this.additionalShippingCostPerUnit, shippingOption.additionalShippingCostPerUnit) &&
        Objects.equals(this.cutOffDateUsedForEstimate, shippingOption.cutOffDateUsedForEstimate) &&
        Objects.equals(this.fulfilledThrough, shippingOption.fulfilledThrough) &&
        Objects.equals(this.guaranteedDelivery, shippingOption.guaranteedDelivery) &&
        Objects.equals(this.importCharges, shippingOption.importCharges) &&
        Objects.equals(this.maxEstimatedDeliveryDate, shippingOption.maxEstimatedDeliveryDate) &&
        Objects.equals(this.minEstimatedDeliveryDate, shippingOption.minEstimatedDeliveryDate) &&
        Objects.equals(this.quantityUsedForEstimate, shippingOption.quantityUsedForEstimate) &&
        Objects.equals(this.shippingCarrierCode, shippingOption.shippingCarrierCode) &&
        Objects.equals(this.shippingCost, shippingOption.shippingCost) &&
        Objects.equals(this.shippingCostType, shippingOption.shippingCostType) &&
        Objects.equals(this.shippingServiceCode, shippingOption.shippingServiceCode) &&
        Objects.equals(this.shipToLocationUsedForEstimate, shippingOption.shipToLocationUsedForEstimate) &&
        Objects.equals(this.trademarkSymbol, shippingOption.trademarkSymbol) &&
        Objects.equals(this.type, shippingOption.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalShippingCostPerUnit, cutOffDateUsedForEstimate, fulfilledThrough, guaranteedDelivery, importCharges, maxEstimatedDeliveryDate, minEstimatedDeliveryDate, quantityUsedForEstimate, shippingCarrierCode, shippingCost, shippingCostType, shippingServiceCode, shipToLocationUsedForEstimate, trademarkSymbol, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingOption {\n");
    
    sb.append("    additionalShippingCostPerUnit: ").append(toIndentedString(additionalShippingCostPerUnit)).append("\n");
    sb.append("    cutOffDateUsedForEstimate: ").append(toIndentedString(cutOffDateUsedForEstimate)).append("\n");
    sb.append("    fulfilledThrough: ").append(toIndentedString(fulfilledThrough)).append("\n");
    sb.append("    guaranteedDelivery: ").append(toIndentedString(guaranteedDelivery)).append("\n");
    sb.append("    importCharges: ").append(toIndentedString(importCharges)).append("\n");
    sb.append("    maxEstimatedDeliveryDate: ").append(toIndentedString(maxEstimatedDeliveryDate)).append("\n");
    sb.append("    minEstimatedDeliveryDate: ").append(toIndentedString(minEstimatedDeliveryDate)).append("\n");
    sb.append("    quantityUsedForEstimate: ").append(toIndentedString(quantityUsedForEstimate)).append("\n");
    sb.append("    shippingCarrierCode: ").append(toIndentedString(shippingCarrierCode)).append("\n");
    sb.append("    shippingCost: ").append(toIndentedString(shippingCost)).append("\n");
    sb.append("    shippingCostType: ").append(toIndentedString(shippingCostType)).append("\n");
    sb.append("    shippingServiceCode: ").append(toIndentedString(shippingServiceCode)).append("\n");
    sb.append("    shipToLocationUsedForEstimate: ").append(toIndentedString(shipToLocationUsedForEstimate)).append("\n");
    sb.append("    trademarkSymbol: ").append(toIndentedString(trademarkSymbol)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
