/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * The type that defines the fields for the estimated item availability information.
 */
@Schema(description = "The type that defines the fields for the estimated item availability information.")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class EstimatedAvailability {
  @SerializedName("availabilityThreshold")
  private Integer availabilityThreshold = null;

  @SerializedName("availabilityThresholdType")
  private String availabilityThresholdType = null;

  @SerializedName("deliveryOptions")
  private List<String> deliveryOptions = null;

  @SerializedName("estimatedAvailabilityStatus")
  private String estimatedAvailabilityStatus = null;

  @SerializedName("estimatedAvailableQuantity")
  private Integer estimatedAvailableQuantity = null;

  @SerializedName("estimatedSoldQuantity")
  private Integer estimatedSoldQuantity = null;

  public EstimatedAvailability availabilityThreshold(Integer availabilityThreshold) {
    this.availabilityThreshold = availabilityThreshold;
    return this;
  }

   /**
   * This field is return only when the seller sets their &#x27;&lt;a href&#x3D;\&quot;#display-item-quantity\&quot;&gt;display item quantity&lt;/a&gt;&#x27; preference to &lt;b&gt; Display \&quot;More than 10 available\&quot; in your listing (if applicable)&lt;/b&gt;. The value of this field will be \&quot;10\&quot;, which is the threshold value. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this value.
   * @return availabilityThreshold
  **/
  @Schema(description = "This field is return only when the seller sets their '<a href=\"#display-item-quantity\">display item quantity</a>' preference to <b> Display \"More than 10 available\" in your listing (if applicable)</b>. The value of this field will be \"10\", which is the threshold value. <br><br>Code so that your app gracefully handles any future changes to this value.")
  public Integer getAvailabilityThreshold() {
    return availabilityThreshold;
  }

  public void setAvailabilityThreshold(Integer availabilityThreshold) {
    this.availabilityThreshold = availabilityThreshold;
  }

  public EstimatedAvailability availabilityThresholdType(String availabilityThresholdType) {
    this.availabilityThresholdType = availabilityThresholdType;
    return this;
  }

   /**
   * &lt;a name&#x3D;\&quot;display-item-quantity\&quot;&gt;&lt;/a&gt; This field is return only when the seller sets their &lt;b&gt; Display Item Quantity&lt;/b&gt; preference to &lt;b&gt; Display \&quot;More than 10 available\&quot; in your listing (if applicable)&lt;/b&gt;. The value of this field will be &lt;code&gt; MORE_THAN&lt;/code&gt;. This indicates that the seller has more than the &#x27;quantity display preference&#x27;, which is 10, in stock for this item.    &lt;br&gt;&lt;br&gt; The following are the display item quantity preferences the seller can set. &lt;br&gt;&lt;ul&gt;&lt;li&gt; &lt;b&gt; Display \&quot;More than 10 available\&quot; in your listing (if applicable) &lt;/b&gt;&lt;ul&gt; &lt;li&gt;If the seller enables this preference, this field is returned as long as there are more than 10 of this item in inventory.&lt;/li&gt;  &lt;li&gt; If the quantity is equal to 10 or drops below 10, this field is not returned and the estimated quantity of the item is returned in the &lt;b&gt; estimatedAvailableQuantity&lt;/b&gt; field.&lt;/li&gt;&lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;b&gt; Display the exact quantity in your items&lt;/b&gt; &lt;br&gt;If the seller enables this preference, the &lt;b&gt; availabilityThresholdType&lt;/b&gt; and &lt;b&gt; availabilityThreshold&lt;/b&gt; fields are not returned and the estimated quantity of the item is returned in the &lt;b&gt; estimatedAvailableQuantity&lt;/b&gt; field.&lt;br&gt;&lt;br&gt;&lt;b&gt; Note: &lt;/b&gt; Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. &lt;/li&gt;&lt;/ul&gt;   &lt;br&gt;Code so that your app gracefully handles any future changes to these preferences. For implementation help, refer to &lt;a href&#x3D;&#x27;https://developer.ebay.com/api-docs/buy/browse/types/gct:AvailabilityThresholdEnum&#x27;&gt;eBay API documentation&lt;/a&gt;
   * @return availabilityThresholdType
  **/
  @Schema(description = "<a name=\"display-item-quantity\"></a> This field is return only when the seller sets their <b> Display Item Quantity</b> preference to <b> Display \"More than 10 available\" in your listing (if applicable)</b>. The value of this field will be <code> MORE_THAN</code>. This indicates that the seller has more than the 'quantity display preference', which is 10, in stock for this item.    <br><br> The following are the display item quantity preferences the seller can set. <br><ul><li> <b> Display \"More than 10 available\" in your listing (if applicable) </b><ul> <li>If the seller enables this preference, this field is returned as long as there are more than 10 of this item in inventory.</li>  <li> If the quantity is equal to 10 or drops below 10, this field is not returned and the estimated quantity of the item is returned in the <b> estimatedAvailableQuantity</b> field.</li></ul> </li> <li> <b> Display the exact quantity in your items</b> <br>If the seller enables this preference, the <b> availabilityThresholdType</b> and <b> availabilityThreshold</b> fields are not returned and the estimated quantity of the item is returned in the <b> estimatedAvailableQuantity</b> field.<br><br><b> Note: </b> Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. </li></ul>   <br>Code so that your app gracefully handles any future changes to these preferences. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:AvailabilityThresholdEnum'>eBay API documentation</a>")
  public String getAvailabilityThresholdType() {
    return availabilityThresholdType;
  }

  public void setAvailabilityThresholdType(String availabilityThresholdType) {
    this.availabilityThresholdType = availabilityThresholdType;
  }

  public EstimatedAvailability deliveryOptions(List<String> deliveryOptions) {
    this.deliveryOptions = deliveryOptions;
    return this;
  }

  public EstimatedAvailability addDeliveryOptionsItem(String deliveryOptionsItem) {
    if (this.deliveryOptions == null) {
      this.deliveryOptions = new ArrayList<String>();
    }
    this.deliveryOptions.add(deliveryOptionsItem);
    return this;
  }

   /**
   * An array of available delivery options. &lt;br&gt;&lt;br&gt;&lt;b&gt; Valid Values: &lt;/b&gt; SHIP_TO_HOME, SELLER_ARRANGED_LOCAL_PICKUP, IN_STORE_PICKUP, PICKUP_DROP_OFF, or DIGITAL_DELIVERY &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. 
   * @return deliveryOptions
  **/
  @Schema(description = "An array of available delivery options. <br><br><b> Valid Values: </b> SHIP_TO_HOME, SELLER_ARRANGED_LOCAL_PICKUP, IN_STORE_PICKUP, PICKUP_DROP_OFF, or DIGITAL_DELIVERY <br><br>Code so that your app gracefully handles any future changes to this list. ")
  public List<String> getDeliveryOptions() {
    return deliveryOptions;
  }

  public void setDeliveryOptions(List<String> deliveryOptions) {
    this.deliveryOptions = deliveryOptions;
  }

  public EstimatedAvailability estimatedAvailabilityStatus(String estimatedAvailabilityStatus) {
    this.estimatedAvailabilityStatus = estimatedAvailabilityStatus;
    return this;
  }

   /**
   * An enumeration value representing the inventory status of this item.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note: &lt;/b&gt;Be sure to review the &lt;b&gt;itemEndDate&lt;/b&gt; field to determine whether the item is available for purchase.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt; Valid Values: &lt;/b&gt; IN_STOCK, LIMITED_STOCK, or OUT_OF_STOCK &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href&#x3D;&#x27;https://developer.ebay.com/api-docs/buy/browse/types/gct:AvailabilityStatusEnum&#x27;&gt;eBay API documentation&lt;/a&gt;
   * @return estimatedAvailabilityStatus
  **/
  @Schema(description = "An enumeration value representing the inventory status of this item.<br><br><span class=\"tablenote\"><b> Note: </b>Be sure to review the <b>itemEndDate</b> field to determine whether the item is available for purchase.</span><br><br><b> Valid Values: </b> IN_STOCK, LIMITED_STOCK, or OUT_OF_STOCK <br><br>Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:AvailabilityStatusEnum'>eBay API documentation</a>")
  public String getEstimatedAvailabilityStatus() {
    return estimatedAvailabilityStatus;
  }

  public void setEstimatedAvailabilityStatus(String estimatedAvailabilityStatus) {
    this.estimatedAvailabilityStatus = estimatedAvailabilityStatus;
  }

  public EstimatedAvailability estimatedAvailableQuantity(Integer estimatedAvailableQuantity) {
    this.estimatedAvailableQuantity = estimatedAvailableQuantity;
    return this;
  }

   /**
   * The estimated number of this item that are available for purchase. Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. So instead of returning quantity, the estimated availability of the item is returned.
   * @return estimatedAvailableQuantity
  **/
  @Schema(description = "The estimated number of this item that are available for purchase. Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. So instead of returning quantity, the estimated availability of the item is returned.")
  public Integer getEstimatedAvailableQuantity() {
    return estimatedAvailableQuantity;
  }

  public void setEstimatedAvailableQuantity(Integer estimatedAvailableQuantity) {
    this.estimatedAvailableQuantity = estimatedAvailableQuantity;
  }

  public EstimatedAvailability estimatedSoldQuantity(Integer estimatedSoldQuantity) {
    this.estimatedSoldQuantity = estimatedSoldQuantity;
    return this;
  }

   /**
   * The estimated number of this item that have been sold.
   * @return estimatedSoldQuantity
  **/
  @Schema(description = "The estimated number of this item that have been sold.")
  public Integer getEstimatedSoldQuantity() {
    return estimatedSoldQuantity;
  }

  public void setEstimatedSoldQuantity(Integer estimatedSoldQuantity) {
    this.estimatedSoldQuantity = estimatedSoldQuantity;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimatedAvailability estimatedAvailability = (EstimatedAvailability) o;
    return Objects.equals(this.availabilityThreshold, estimatedAvailability.availabilityThreshold) &&
        Objects.equals(this.availabilityThresholdType, estimatedAvailability.availabilityThresholdType) &&
        Objects.equals(this.deliveryOptions, estimatedAvailability.deliveryOptions) &&
        Objects.equals(this.estimatedAvailabilityStatus, estimatedAvailability.estimatedAvailabilityStatus) &&
        Objects.equals(this.estimatedAvailableQuantity, estimatedAvailability.estimatedAvailableQuantity) &&
        Objects.equals(this.estimatedSoldQuantity, estimatedAvailability.estimatedSoldQuantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availabilityThreshold, availabilityThresholdType, deliveryOptions, estimatedAvailabilityStatus, estimatedAvailableQuantity, estimatedSoldQuantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimatedAvailability {\n");
    
    sb.append("    availabilityThreshold: ").append(toIndentedString(availabilityThreshold)).append("\n");
    sb.append("    availabilityThresholdType: ").append(toIndentedString(availabilityThresholdType)).append("\n");
    sb.append("    deliveryOptions: ").append(toIndentedString(deliveryOptions)).append("\n");
    sb.append("    estimatedAvailabilityStatus: ").append(toIndentedString(estimatedAvailabilityStatus)).append("\n");
    sb.append("    estimatedAvailableQuantity: ").append(toIndentedString(estimatedAvailableQuantity)).append("\n");
    sb.append("    estimatedSoldQuantity: ").append(toIndentedString(estimatedSoldQuantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
