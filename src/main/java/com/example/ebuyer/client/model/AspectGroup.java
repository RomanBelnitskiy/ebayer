/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * AspectGroup
 */

@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class AspectGroup {
  @SerializedName("aspects")
  private List<Aspect> aspects = null;

  @SerializedName("localizedGroupName")
  private String localizedGroupName = null;

  public AspectGroup aspects(List<Aspect> aspects) {
    this.aspects = aspects;
    return this;
  }

  public AspectGroup addAspectsItem(Aspect aspectsItem) {
    if (this.aspects == null) {
      this.aspects = new ArrayList<Aspect>();
    }
    this.aspects.add(aspectsItem);
    return this;
  }

   /**
   * An array of the name/value pairs for the aspects of the product. For example: BRAND/Apple
   * @return aspects
  **/
  @Schema(description = "An array of the name/value pairs for the aspects of the product. For example: BRAND/Apple")
  public List<Aspect> getAspects() {
    return aspects;
  }

  public void setAspects(List<Aspect> aspects) {
    this.aspects = aspects;
  }

  public AspectGroup localizedGroupName(String localizedGroupName) {
    this.localizedGroupName = localizedGroupName;
    return this;
  }

   /**
   * The name of a group of aspects. &lt;br&gt;&lt;br&gt;In the following example, &lt;b&gt; Product Identifiers&lt;/b&gt; and &lt;b&gt; Process&lt;/b&gt; are product aspect group names. Under the group name are the product aspect name/value pairs. &lt;p&gt;&lt;b&gt; Product Identifiers&lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Brand/Apple &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Product Family/iMac&lt;/p&gt; &lt;p&gt;&lt;b&gt; Processor&lt;/b&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Processor Type/Intel &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Processor Speed/3.10&lt;/p&gt; 
   * @return localizedGroupName
  **/
  @Schema(description = "The name of a group of aspects. <br><br>In the following example, <b> Product Identifiers</b> and <b> Process</b> are product aspect group names. Under the group name are the product aspect name/value pairs. <p><b> Product Identifiers</b> <br>&nbsp;&nbsp;&nbsp;Brand/Apple <br>&nbsp;&nbsp;&nbsp;Product Family/iMac</p> <p><b> Processor</b><br>&nbsp;&nbsp;&nbsp;Processor Type/Intel <br>&nbsp;&nbsp;&nbsp;Processor Speed/3.10</p> ")
  public String getLocalizedGroupName() {
    return localizedGroupName;
  }

  public void setLocalizedGroupName(String localizedGroupName) {
    this.localizedGroupName = localizedGroupName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AspectGroup aspectGroup = (AspectGroup) o;
    return Objects.equals(this.aspects, aspectGroup.aspects) &&
        Objects.equals(this.localizedGroupName, aspectGroup.localizedGroupName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aspects, localizedGroupName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AspectGroup {\n");
    
    sb.append("    aspects: ").append(toIndentedString(aspects)).append("\n");
    sb.append("    localizedGroupName: ").append(toIndentedString(localizedGroupName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
