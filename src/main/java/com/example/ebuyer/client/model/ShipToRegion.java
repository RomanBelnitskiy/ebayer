/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.Objects;

/**
 * This type is used provide details about included and excluded shipping regions.
 */
@Schema(description = "This type is used provide details about included and excluded shipping regions.")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class ShipToRegion {
  @SerializedName("regionId")
  private String regionId = null;

  @SerializedName("regionName")
  private String regionName = null;

  @SerializedName("regionType")
  private String regionType = null;

  public ShipToRegion regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * The unique identifier of the shipping region. The value returned here is dependent on the corresponding &lt;b&gt;regionType&lt;/b&gt; value. The &lt;b&gt;regionId&lt;/b&gt; value for a region does not vary based on the eBay marketplace. However, the corresponding &lt;b&gt;regionName&lt;/b&gt; value for a region is a localized, text-based description of the shipping region. &lt;br&gt;&lt;br&gt; If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;WORLDWIDE&lt;/code&gt;, the &lt;b&gt;regionId&lt;/b&gt; value will also be &lt;code&gt;WORLDWIDE&lt;/code&gt;.&lt;br&gt;&lt;br&gt; If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;WORLD_REGION&lt;/code&gt;, the &lt;b&gt;regionId&lt;/b&gt; value will be one of the following: &lt;code&gt;AFRICA&lt;/code&gt;, &lt;code&gt;AMERICAS&lt;/code&gt;, &lt;code&gt;ASIA&lt;/code&gt;, &lt;code&gt;AUSTRALIA&lt;/code&gt;, &lt;code&gt;CENTRAL_AMERICA_AND_CARIBBEAN&lt;/code&gt;, &lt;code&gt;EUROPE&lt;/code&gt;, &lt;code&gt;EUROPEAN_UNION&lt;/code&gt;, &lt;code&gt;GREATER_CHINA&lt;/code&gt;, &lt;code&gt;MIDDLE_EAST&lt;/code&gt;, &lt;code&gt;NORTH_AMERICA&lt;/code&gt;, &lt;code&gt;OCEANIA&lt;/code&gt;, &lt;code&gt;SOUTH_AMERICA&lt;/code&gt;, &lt;code&gt;SOUTHEAST_ASIA&lt;/code&gt; or &lt;code&gt;CHANNEL_ISLANDS&lt;/code&gt;.&lt;br&gt;&lt;br&gt;If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;COUNTRY&lt;/code&gt;, the &lt;b&gt;regionId&lt;/b&gt; value will be the two-letter code for the country, as defined in the &lt;a href&#x3D;\&quot;https://www.iso.org/iso-3166-country-codes.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;ISO 3166&lt;/a&gt; standard.&lt;br&gt;&lt;br&gt;If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;STATE_OR_PROVINCE&lt;/code&gt;, the &lt;b&gt;regionId&lt;/b&gt; value will either be the two-letter code for US states and DC (as defined on this &lt;a href&#x3D;\&quot;https://www.ssa.gov/international/coc-docs/states.html \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Social Security Administration&lt;/a&gt; page), or the two-letter code for Canadian provinces (as defined by this &lt;a href&#x3D;\&quot;https://www.canadapost.ca/tools/pg/manual/PGaddress-e.asp?ecid&#x3D;murl10006450#1442131 \&quot; target&#x3D;\&quot;_blank\&quot;&gt;Canada Post&lt;/a&gt; page).&lt;br&gt;&lt;br&gt;If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;COUNTRY_REGION&lt;/code&gt;, the &lt;b&gt;regionId&lt;/b&gt; value may be one of following: &lt;code&gt;_AH&lt;/code&gt; (if a seller is not willing to ship to Alaska/Hawaii), &lt;code&gt;_PR&lt;/code&gt; (if the seller is not willing to ship to US Protectorates), &lt;code&gt;_AP&lt;/code&gt; (if seller is not willing to ship to a US Army or Fleet Post Office), and &lt;code&gt;PO_BOX&lt;/code&gt; (if the seller is not willing to ship to a Post Office Box).
   * @return regionId
  **/
  @Schema(description = "The unique identifier of the shipping region. The value returned here is dependent on the corresponding <b>regionType</b> value. The <b>regionId</b> value for a region does not vary based on the eBay marketplace. However, the corresponding <b>regionName</b> value for a region is a localized, text-based description of the shipping region. <br><br> If the <b>regionType</b> value is <code>WORLDWIDE</code>, the <b>regionId</b> value will also be <code>WORLDWIDE</code>.<br><br> If the <b>regionType</b> value is <code>WORLD_REGION</code>, the <b>regionId</b> value will be one of the following: <code>AFRICA</code>, <code>AMERICAS</code>, <code>ASIA</code>, <code>AUSTRALIA</code>, <code>CENTRAL_AMERICA_AND_CARIBBEAN</code>, <code>EUROPE</code>, <code>EUROPEAN_UNION</code>, <code>GREATER_CHINA</code>, <code>MIDDLE_EAST</code>, <code>NORTH_AMERICA</code>, <code>OCEANIA</code>, <code>SOUTH_AMERICA</code>, <code>SOUTHEAST_ASIA</code> or <code>CHANNEL_ISLANDS</code>.<br><br>If the <b>regionType</b> value is <code>COUNTRY</code>, the <b>regionId</b> value will be the two-letter code for the country, as defined in the <a href=\"https://www.iso.org/iso-3166-country-codes.html \" target=\"_blank\">ISO 3166</a> standard.<br><br>If the <b>regionType</b> value is <code>STATE_OR_PROVINCE</code>, the <b>regionId</b> value will either be the two-letter code for US states and DC (as defined on this <a href=\"https://www.ssa.gov/international/coc-docs/states.html \" target=\"_blank\">Social Security Administration</a> page), or the two-letter code for Canadian provinces (as defined by this <a href=\"https://www.canadapost.ca/tools/pg/manual/PGaddress-e.asp?ecid=murl10006450#1442131 \" target=\"_blank\">Canada Post</a> page).<br><br>If the <b>regionType</b> value is <code>COUNTRY_REGION</code>, the <b>regionId</b> value may be one of following: <code>_AH</code> (if a seller is not willing to ship to Alaska/Hawaii), <code>_PR</code> (if the seller is not willing to ship to US Protectorates), <code>_AP</code> (if seller is not willing to ship to a US Army or Fleet Post Office), and <code>PO_BOX</code> (if the seller is not willing to ship to a Post Office Box).")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public ShipToRegion regionName(String regionName) {
    this.regionName = regionName;
    return this;
  }

   /**
   * A localized text string that indicates the name of the shipping region. The value returned here is dependent on the corresponding &lt;b&gt;regionType&lt;/b&gt; value. &lt;br&gt;&lt;br&gt; If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;WORLDWIDE&lt;/code&gt;, the &lt;b&gt;regionName&lt;/b&gt; value will show &lt;code&gt;Worldwide&lt;/code&gt;.&lt;br&gt;&lt;br&gt; If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;WORLD_REGION&lt;/code&gt;, the &lt;b&gt;regionName&lt;/b&gt; value will be a localized text string for one of the following large geographical regions: Africa, Americas, Asia, Australia, Central America and Caribbean, Europe, European Union, Greater China, Middle East, North America, Oceania, South America, Southeast Asia, or Channel Islands.&lt;br&gt;&lt;br&gt;If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;COUNTRY&lt;/code&gt;, the &lt;b&gt;regionName&lt;/b&gt; value will be a localized text string for any country in the world.&lt;br&gt;&lt;br&gt;If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;STATE_OR_PROVINCE&lt;/code&gt;, the &lt;b&gt;regionName&lt;/b&gt; value will be a localized text string for any US state or Canadian province. &lt;br&gt;&lt;br&gt;If the &lt;b&gt;regionType&lt;/b&gt; value is &lt;code&gt;COUNTRY_REGION&lt;/code&gt;, the &lt;b&gt;regionName&lt;/b&gt; value may be a localized version of one of the following: Alaska/Hawaii, US Protectorates, APO/FPO (Army or Fleet Post Office), or PO BOX.
   * @return regionName
  **/
  @Schema(description = "A localized text string that indicates the name of the shipping region. The value returned here is dependent on the corresponding <b>regionType</b> value. <br><br> If the <b>regionType</b> value is <code>WORLDWIDE</code>, the <b>regionName</b> value will show <code>Worldwide</code>.<br><br> If the <b>regionType</b> value is <code>WORLD_REGION</code>, the <b>regionName</b> value will be a localized text string for one of the following large geographical regions: Africa, Americas, Asia, Australia, Central America and Caribbean, Europe, European Union, Greater China, Middle East, North America, Oceania, South America, Southeast Asia, or Channel Islands.<br><br>If the <b>regionType</b> value is <code>COUNTRY</code>, the <b>regionName</b> value will be a localized text string for any country in the world.<br><br>If the <b>regionType</b> value is <code>STATE_OR_PROVINCE</code>, the <b>regionName</b> value will be a localized text string for any US state or Canadian province. <br><br>If the <b>regionType</b> value is <code>COUNTRY_REGION</code>, the <b>regionName</b> value may be a localized version of one of the following: Alaska/Hawaii, US Protectorates, APO/FPO (Army or Fleet Post Office), or PO BOX.")
  public String getRegionName() {
    return regionName;
  }

  public void setRegionName(String regionName) {
    this.regionName = regionName;
  }

  public ShipToRegion regionType(String regionType) {
    this.regionType = regionType;
    return this;
  }

   /**
   * An enumeration value that indicates the level or type of shipping region. &lt;br&gt;&lt;br&gt;&lt;b&gt; Valid Values: &lt;/b&gt; &lt;ul&gt;&lt;li&gt;&lt;b&gt; COUNTRY_REGION &lt;/b&gt; - Indicates the region is a domestic region or special location within a country.&lt;/li&gt;&lt;li&gt;&lt;b&gt; STATE_OR_PROVINCE &lt;/b&gt; - Indicates the region is a state or province within a country, such as California or New York in the US, or Ontario or Alberta in Canada.&lt;/li&gt;&lt;li&gt;&lt;b&gt; COUNTRY &lt;/b&gt; - Indicates the region is a single country.&lt;/li&gt;&lt;li&gt;&lt;b&gt; WORLD_REGION &lt;/b&gt; - Indicates the region is a world region, such as Africa, the Middle East, or Southeast Asia.&lt;/li&gt;&lt;li&gt;&lt;b&gt; WORLDWIDE &lt;/b&gt; - Indicates the region is the entire world. This value is only applicable for included shiping regions, and not excluded shipping regions.&lt;/li&gt;&lt;/ul&gt; For more detail on the actual &lt;b&gt;regionName&lt;/b&gt;/&lt;b&gt;regionId&lt;/b&gt; values that will be returned based on the &lt;b&gt;regionType&lt;/b&gt; value, see the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.shipToLocations.regionExcluded.regionId\&quot;&gt;regionId&lt;/a&gt; and/or &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.shipToLocations.regionExcluded.regionName\&quot;&gt;regionName&lt;/a&gt; field descriptions.&lt;br&gt;&lt;br&gt; Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href&#x3D;&#x27;https://developer.ebay.com/api-docs/buy/browse/types/ba:RegionTypeEnum&#x27;&gt;eBay API documentation&lt;/a&gt;
   * @return regionType
  **/
  @Schema(description = "An enumeration value that indicates the level or type of shipping region. <br><br><b> Valid Values: </b> <ul><li><b> COUNTRY_REGION </b> - Indicates the region is a domestic region or special location within a country.</li><li><b> STATE_OR_PROVINCE </b> - Indicates the region is a state or province within a country, such as California or New York in the US, or Ontario or Alberta in Canada.</li><li><b> COUNTRY </b> - Indicates the region is a single country.</li><li><b> WORLD_REGION </b> - Indicates the region is a world region, such as Africa, the Middle East, or Southeast Asia.</li><li><b> WORLDWIDE </b> - Indicates the region is the entire world. This value is only applicable for included shiping regions, and not excluded shipping regions.</li></ul> For more detail on the actual <b>regionName</b>/<b>regionId</b> values that will be returned based on the <b>regionType</b> value, see the <a href=\"/api-docs/buy/browse/resources/item/methods/getItem#response.shipToLocations.regionExcluded.regionId\">regionId</a> and/or <a href=\"/api-docs/buy/browse/resources/item/methods/getItem#response.shipToLocations.regionExcluded.regionName\">regionName</a> field descriptions.<br><br> Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/ba:RegionTypeEnum'>eBay API documentation</a>")
  public String getRegionType() {
    return regionType;
  }

  public void setRegionType(String regionType) {
    this.regionType = regionType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipToRegion shipToRegion = (ShipToRegion) o;
    return Objects.equals(this.regionId, shipToRegion.regionId) &&
        Objects.equals(this.regionName, shipToRegion.regionName) &&
        Objects.equals(this.regionType, shipToRegion.regionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(regionId, regionName, regionType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipToRegion {\n");
    
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    regionName: ").append(toIndentedString(regionName)).append("\n");
    sb.append("    regionType: ").append(toIndentedString(regionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
