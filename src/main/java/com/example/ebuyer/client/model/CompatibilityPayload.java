/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * An array of attribute name/value pairs used to define a specific product. For example: If you wanted to specify a specific car, one of the name/value pairs would be &lt;br&gt;&lt;code&gt;\&quot;name\&quot; : \&quot;Year\&quot;, &lt;br&gt;\&quot;value\&quot; : \&quot;2019\&quot;&lt;/code&gt;  &lt;p&gt; For a list of the attributes required for cars and trucks and motorcycles see &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Check\&quot;&gt;Check compatibility&lt;/a&gt; in the Buy Integration Guide.&lt;/p&gt;
 */
@Schema(description = "An array of attribute name/value pairs used to define a specific product. For example: If you wanted to specify a specific car, one of the name/value pairs would be <br><code>\"name\" : \"Year\", <br>\"value\" : \"2019\"</code>  <p> For a list of the attributes required for cars and trucks and motorcycles see <a href=\"/api-docs/buy/static/api-browse.html#Check\">Check compatibility</a> in the Buy Integration Guide.</p>")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class CompatibilityPayload {
  @SerializedName("compatibilityProperties")
  private List<AttributeNameValue> compatibilityProperties = null;

  public CompatibilityPayload compatibilityProperties(List<AttributeNameValue> compatibilityProperties) {
    this.compatibilityProperties = compatibilityProperties;
    return this;
  }

  public CompatibilityPayload addCompatibilityPropertiesItem(AttributeNameValue compatibilityPropertiesItem) {
    if (this.compatibilityProperties == null) {
      this.compatibilityProperties = new ArrayList<AttributeNameValue>();
    }
    this.compatibilityProperties.add(compatibilityPropertiesItem);
    return this;
  }

   /**
   * An array of attribute name/value pairs used to define a specific product. For example: If you wanted to specify a specific car, one of the name/value pairs would be &lt;br&gt;&lt;code&gt;\&quot;name\&quot; : \&quot;Year\&quot;, &lt;br&gt;\&quot;value\&quot; : \&quot;2019\&quot;&lt;/code&gt;  &lt;p&gt; For a list of the attributes required for cars and trucks and motorcycles see &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Check\&quot;&gt;Check compatibility&lt;/a&gt; in the Buy Integration Guide.&lt;/p&gt;
   * @return compatibilityProperties
  **/
  @Schema(description = "An array of attribute name/value pairs used to define a specific product. For example: If you wanted to specify a specific car, one of the name/value pairs would be <br><code>\"name\" : \"Year\", <br>\"value\" : \"2019\"</code>  <p> For a list of the attributes required for cars and trucks and motorcycles see <a href=\"/api-docs/buy/static/api-browse.html#Check\">Check compatibility</a> in the Buy Integration Guide.</p>")
  public List<AttributeNameValue> getCompatibilityProperties() {
    return compatibilityProperties;
  }

  public void setCompatibilityProperties(List<AttributeNameValue> compatibilityProperties) {
    this.compatibilityProperties = compatibilityProperties;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompatibilityPayload compatibilityPayload = (CompatibilityPayload) o;
    return Objects.equals(this.compatibilityProperties, compatibilityPayload.compatibilityProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compatibilityProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompatibilityPayload {\n");
    
    sb.append("    compatibilityProperties: ").append(toIndentedString(compatibilityProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
