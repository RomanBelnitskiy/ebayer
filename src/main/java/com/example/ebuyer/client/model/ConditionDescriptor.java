/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
/**
 * This type displays additional information about the condition of an item in a structured format.
 */
@Schema(description = "This type displays additional information about the condition of an item in a structured format.")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class ConditionDescriptor {
  @SerializedName("name")
  private String name = null;

  @SerializedName("values")
  private List<ConditionDescriptorValue> values = null;

  public ConditionDescriptor name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of a condition descriptor. The value(s) for this condition descriptor is returned in the associated &lt;b&gt;values&lt;/b&gt; array.
   * @return name
  **/
  @Schema(description = "The name of a condition descriptor. The value(s) for this condition descriptor is returned in the associated <b>values</b> array.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ConditionDescriptor values(List<ConditionDescriptorValue> values) {
    this.values = values;
    return this;
  }

  public ConditionDescriptor addValuesItem(ConditionDescriptorValue valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<ConditionDescriptorValue>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * This array displays the value(s) for a condition descriptor (denoted by the associated &lt;b&gt;name&lt;/b&gt; field), as well as any other additional information about the condition of the item.
   * @return values
  **/
  @Schema(description = "This array displays the value(s) for a condition descriptor (denoted by the associated <b>name</b> field), as well as any other additional information about the condition of the item.")
  public List<ConditionDescriptorValue> getValues() {
    return values;
  }

  public void setValues(List<ConditionDescriptorValue> values) {
    this.values = values;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConditionDescriptor conditionDescriptor = (ConditionDescriptor) o;
    return Objects.equals(this.name, conditionDescriptor.name) &&
        Objects.equals(this.values, conditionDescriptor.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConditionDescriptor {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
