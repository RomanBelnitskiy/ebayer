/*
 * Browse API
 * <p>The Browse API has the following resources:</p>   <ul> <li><b> item_summary: </b> Lets shoppers search for specific items by keyword, GTIN, category, charity, product, image </b><a href=\"/api-docs/static/versioning.html#experimental \" target=\"_blank\"><img src=\"/cms/img/docs/experimental-icon.svg\" class=\"legend-icon experimental-icon\" alt=\"Experimental Method\" title=\"Experimental Method\" />(Experimental Method)</a>, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li>   <li><b> item: </b> <ul><li>Lets you retrieve the details of a specific item or all the items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.</li> <li>Provides a bridge between the eBay legacy APIs, such as <b> Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li>  </ul> </li>  </ul>       <p>The <b> item_summary</b>, <b> search_by_image</b>, and <b> item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\">Application access token</a>.</p>
 *
 * OpenAPI spec version: v1.19.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.ebuyer.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.util.Objects;

/**
 * The type that defines the tax fields.
 */
@Schema(description = "The type that defines the tax fields.")
@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-01-25T17:50:03.851347329Z[GMT]")

public class Taxes {
  @SerializedName("ebayCollectAndRemitTax")
  private Boolean ebayCollectAndRemitTax = null;

  @SerializedName("includedInPrice")
  private Boolean includedInPrice = null;

  @SerializedName("shippingAndHandlingTaxed")
  private Boolean shippingAndHandlingTaxed = null;

  @SerializedName("taxJurisdiction")
  private TaxJurisdiction taxJurisdiction = null;

  @SerializedName("taxPercentage")
  private String taxPercentage = null;

  @SerializedName("taxType")
  private String taxType = null;

  public Taxes ebayCollectAndRemitTax(Boolean ebayCollectAndRemitTax) {
    this.ebayCollectAndRemitTax = ebayCollectAndRemitTax;
    return this;
  }

   /**
   * This field is only returned if &lt;code&gt;true&lt;/code&gt;, and indicates that eBay will collect tax (sales tax, Goods and Services tax, or VAT) for at least one line item in the order, and remit the tax to the taxing authority of the buyer&#x27;s residence. 
   * @return ebayCollectAndRemitTax
  **/
  @Schema(description = "This field is only returned if <code>true</code>, and indicates that eBay will collect tax (sales tax, Goods and Services tax, or VAT) for at least one line item in the order, and remit the tax to the taxing authority of the buyer's residence. ")
  public Boolean isEbayCollectAndRemitTax() {
    return ebayCollectAndRemitTax;
  }

  public void setEbayCollectAndRemitTax(Boolean ebayCollectAndRemitTax) {
    this.ebayCollectAndRemitTax = ebayCollectAndRemitTax;
  }

  public Taxes includedInPrice(Boolean includedInPrice) {
    this.includedInPrice = includedInPrice;
    return this;
  }

   /**
   * This indicates if tax was applied for the cost of the item.
   * @return includedInPrice
  **/
  @Schema(description = "This indicates if tax was applied for the cost of the item.")
  public Boolean isIncludedInPrice() {
    return includedInPrice;
  }

  public void setIncludedInPrice(Boolean includedInPrice) {
    this.includedInPrice = includedInPrice;
  }

  public Taxes shippingAndHandlingTaxed(Boolean shippingAndHandlingTaxed) {
    this.shippingAndHandlingTaxed = shippingAndHandlingTaxed;
    return this;
  }

   /**
   * This indicates if tax is applied for the shipping cost.
   * @return shippingAndHandlingTaxed
  **/
  @Schema(description = "This indicates if tax is applied for the shipping cost.")
  public Boolean isShippingAndHandlingTaxed() {
    return shippingAndHandlingTaxed;
  }

  public void setShippingAndHandlingTaxed(Boolean shippingAndHandlingTaxed) {
    this.shippingAndHandlingTaxed = shippingAndHandlingTaxed;
  }

  public Taxes taxJurisdiction(TaxJurisdiction taxJurisdiction) {
    this.taxJurisdiction = taxJurisdiction;
    return this;
  }

   /**
   * Get taxJurisdiction
   * @return taxJurisdiction
  **/
  @Schema(description = "")
  public TaxJurisdiction getTaxJurisdiction() {
    return taxJurisdiction;
  }

  public void setTaxJurisdiction(TaxJurisdiction taxJurisdiction) {
    this.taxJurisdiction = taxJurisdiction;
  }

  public Taxes taxPercentage(String taxPercentage) {
    this.taxPercentage = taxPercentage;
    return this;
  }

   /**
   * The percentage of tax.
   * @return taxPercentage
  **/
  @Schema(description = "The percentage of tax.")
  public String getTaxPercentage() {
    return taxPercentage;
  }

  public void setTaxPercentage(String taxPercentage) {
    this.taxPercentage = taxPercentage;
  }

  public Taxes taxType(String taxType) {
    this.taxType = taxType;
    return this;
  }

   /**
   * This field indicates the type of tax that may be collected for the item. For implementation help, refer to &lt;a href&#x3D;&#x27;https://developer.ebay.com/api-docs/buy/browse/types/gct:TaxType&#x27;&gt;eBay API documentation&lt;/a&gt;
   * @return taxType
  **/
  @Schema(description = "This field indicates the type of tax that may be collected for the item. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/buy/browse/types/gct:TaxType'>eBay API documentation</a>")
  public String getTaxType() {
    return taxType;
  }

  public void setTaxType(String taxType) {
    this.taxType = taxType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Taxes taxes = (Taxes) o;
    return Objects.equals(this.ebayCollectAndRemitTax, taxes.ebayCollectAndRemitTax) &&
        Objects.equals(this.includedInPrice, taxes.includedInPrice) &&
        Objects.equals(this.shippingAndHandlingTaxed, taxes.shippingAndHandlingTaxed) &&
        Objects.equals(this.taxJurisdiction, taxes.taxJurisdiction) &&
        Objects.equals(this.taxPercentage, taxes.taxPercentage) &&
        Objects.equals(this.taxType, taxes.taxType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ebayCollectAndRemitTax, includedInPrice, shippingAndHandlingTaxed, taxJurisdiction, taxPercentage, taxType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Taxes {\n");
    
    sb.append("    ebayCollectAndRemitTax: ").append(toIndentedString(ebayCollectAndRemitTax)).append("\n");
    sb.append("    includedInPrice: ").append(toIndentedString(includedInPrice)).append("\n");
    sb.append("    shippingAndHandlingTaxed: ").append(toIndentedString(shippingAndHandlingTaxed)).append("\n");
    sb.append("    taxJurisdiction: ").append(toIndentedString(taxJurisdiction)).append("\n");
    sb.append("    taxPercentage: ").append(toIndentedString(taxPercentage)).append("\n");
    sb.append("    taxType: ").append(toIndentedString(taxType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
